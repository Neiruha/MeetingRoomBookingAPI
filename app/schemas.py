from datetime import date, time
from typing import List, Optional
from pydantic import BaseModel

class Participant(BaseModel):
    id: str
    name: str
    nickname: Optional[str] = None
    telegram_id: Optional[str] = None

class BookingCreate(BaseModel):
    date: date  # –î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    start_time: time  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
    end_time: time  # –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
    room_id: str  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–Ω–∞—Ç—ã
    booked_by: str  # ID –±—Ä–æ–Ω–∏—Ä—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    participants: List[str]  # –°–ø–∏—Å–æ–∫ ID —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    comment: Optional[str] = None

class BookingUpdate(BaseModel):
    start_time: Optional[time] = None  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
    end_time: Optional[time] = None  # –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
    room_id: Optional[str] = None  # –ö–æ–º–Ω–∞—Ç–∞
    participants: Optional[List[str]] = None  # –£—á–∞—Å—Ç–Ω–∏–∫–∏
    comment: Optional[str] = None  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

class AvailabilityCheck(BaseModel):
    date: date
    start_time: time
    end_time: time
    min_capacity: Optional[int] = None
    needed_interval: Optional[int] = 60  # üëà –¢–µ–ø–µ—Ä—å —ç—Ç–æ —á–∞—Å—Ç—å JSON

class Room(BaseModel):
    id: str  # ID –∫–æ–º–Ω–∞—Ç—ã
    name: str  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    capacity: int  # –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
    features: List[str] = []  # –°–ø–∏—Å–æ–∫ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π
